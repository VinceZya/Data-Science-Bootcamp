# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19scmuthKnH6HKCF9jhtD-XJ1NERh6hmO
"""

import pandas as pd

import matplotlib.pyplot as plt

url = "https://data.cityofnewyork.us/api/views/6fi9-q3ta/rows.csv?accessType=DOWNLOAD"

df = pd.read_csv(url)

df['hour_beginning'] = pd.to_datetime(df['hour_beginning'], errors='coerce')
df

df['day_of_week'] = df['hour_beginning'].dt.day_name()
weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']
df_weekdays = df[df['day_of_week'].isin(weekdays)]

grouped = df_weekdays.groupby('day_of_week')['Pedestrians'].sum().reindex(weekdays)

plt.figure(figsize=(10,6))
plt.plot(grouped.index, grouped.values, marker='o')
plt.xlabel('Day of Week')
plt.ylabel('Total Pedestrian Counts')
plt.title('Pedestrian Counts on Weekdays (Mon-Fri)')
plt.grid(True)
plt.show()

df_2019 = df[(df['location'] == 'Brooklyn Bridge') & (df['hour_beginning'].dt.year == 2019)]
df_2019_sorted = df_2019.sort_values(by='weather_summary')

df_encoded = pd.get_dummies(df_2019_sorted, columns=['weather_summary'], prefix='weather')
weather_cols = [col for col in df_encoded.columns if col.startswith('weather_')]
corr_matrix = df_encoded[['Pedestrians'] + weather_cols].corr()
corr_matrix

plt.figure(figsize=(10,8))
plt.imshow(corr_matrix, cmap='coolwarm', interpolation='none')
plt.colorbar()
plt.xticks(range(len(corr_matrix.columns)), corr_matrix.columns, rotation=45, ha="right")
plt.yticks(range(len(corr_matrix.index)), corr_matrix.index)
plt.title("Correlation Matrix: Pedestrians & Weather Conditions (2019)")
plt.show()

def categorize_time(hour):
  if 5 <= hour <= 11:
    return 'Morning'
  elif 12 <= hour <= 17:
    return 'Afternoon'
  elif 18 <= hour <= 22:
    return 'Evening'
  else:
    return 'Night'

time_order = ['Morning', 'Afternoon', 'Evening', 'Night']
df['time_category'] = df['hour_beginning'].dt.hour.apply(categorize_time)
df['time_category'] = pd.Categorical(df['time_category'], categories=time_order, ordered=True)

activity_by_time = df.groupby('time_category')['Pedestrians'].sum().reindex(time_order)

plt.figure(figsize=(8,6))
plt.bar(activity_by_time.index, activity_by_time.values, color='skyblue')
plt.xlabel('Time of Day')
plt.ylabel('Total Pedestrian Counts')
plt.title('Pedestrian Activity Patterns by Time of Day')
plt.show()